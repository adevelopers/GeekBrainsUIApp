//
//  DevelopViewController.swift
//  GeekBrainsUIApp
//
//  Created by Kirill Khudiakov on 30.12.2019.
//  Copyright ¬© 2019 Kirill Khudiakov. All rights reserved.
//

import UIKit


final class DevelopViewController: UIViewController {
    
    lazy var button: UIButton = {
        let button = UIButton()
        button.setTitle("–í—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å—ã", for: .normal)
        button.contentEdgeInsets = UIEdgeInsets(top: 10, left: 20, bottom: 10, right: 20)
        button.layer.borderWidth = 1
        button.layer.cornerRadius = 10
        button.layer.borderColor = UIColor.white.cgColor
        button.setTitleColor(.white, for: .normal)
        button.addTarget(self, action: #selector(didTap), for: .touchUpInside)
        return button
    }()
    
    init() {
        super.init(nibName: nil, bundle: nil)
    }
    
    required init?(coder: NSCoder) {
        super.init(coder: coder)
        print("üîì –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø—Ä–æ–π–¥–µ–Ω–∞")
    }
    
    override func loadView() {
        super.loadView()
        
    }
    
    override func viewDidLoad() {
        super.viewDidLoad()
        view.addSubview(button)
        button.snp.makeConstraints {
                $0.center.equalToSuperview()
            }
    }
    
    @objc
    private func didTap() {
        let token = Session.shared.token
        let userId = Session.shared.userId
        let api = VKApi(token: token, userId: userId)
        
        // - [x]  **–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –¥—Ä—É–∑–µ–π;**
        api.getFriends() { result in
            if case let .success(note) = result {
                print("\n‚úÖ", note)
            }
        }
        
        // - [x]  **–ü–æ–ª—É—á–µ–Ω–∏–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π —á–µ–ª–æ–≤–µ–∫–∞;**
        api.getAllPhotos() { result in
            if case let .success(note) = result {
                print("\n‚úÖ", note)
            }
        }
        // - [x]  **–ü–æ–ª—É—á–µ–Ω–∏–µ –≥—Ä—É–ø–ø —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è;**
        api.getGroups() { result in
            if case let .success(note) = result {
                print("\n‚úÖ", note)
            }
        }
        
        // - [x]  **–ü–æ–ª—É—á–µ–Ω–∏–µ –≥—Ä—É–ø–ø –ø–æ –ø–æ–∏—Å–∫–æ–≤–æ–º—É –∑–∞–ø—Ä–æ—Å—É;**
        api.searchGroups(with: "Geek") { result in
            if case let .success(note) = result {
                print("\n‚úÖ", note)
            }
        }
        
    }
}
